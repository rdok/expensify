name: Check
on:
  pull_request:
    branches: [main]
  workflow_call:
  workflow_dispatch:
jobs:
  prettier:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
      - name: Setup Node with cache
        uses: actions/setup-node@v3
        with: { cache: "yarn" }
      - name: Install Yarn packages
        run: yarn install --frozen-lockfile
      - name: Check prettier
        run: |
          yarn run prettier
          CODE=$?
          if [ "$CODE" != "0"  ]; then exit 1; fi

  lint:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
      - name: Get Yarn cache directory
        id: yarn-cache-dir-path
        run: echo "::set-output name=dir::$(yarn cache dir)"
      - name: Enable Yarn cache
        uses: actions/cache@v2
        id: yarn-cache
        with:
          path: ${{ steps.yarn-cache-dir-path.outputs.dir }}
          key: ${{ runner.os }}-yarn-${{ hashFiles('**/yarn.lock') }}
          restore-keys: ${{ runner.os }}-yarn-
      - name: Install Yarn packages
        run: yarn install --frozen-lockfile
      - name: Check for code problems
        run: yarn lint
  test:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
      - name: Setup Node with cache
        uses: actions/setup-node@v3
        with: { cache: "yarn" }
      - name: Install Yarn packages
        run: yarn install --frozen-lockfile
      - name: Run tests
        run: yarn test
  build:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
      - name: Setup Node with cache
        uses: actions/setup-node@v3
        with: { cache: "yarn" }
      - name: Install Yarn packages
        run: yarn install --frozen-lockfile
      - name: Check production build
        run: yarn build:prod
